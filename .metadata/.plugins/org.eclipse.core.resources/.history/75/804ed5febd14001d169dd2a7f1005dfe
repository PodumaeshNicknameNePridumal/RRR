#include <gui/racescreen_screen/RaceScreenView.hpp>

RaceScreenView::RaceScreenView()
{

}

void RaceScreenView::setupScreen()
{
	carX = car.getX();
    carY = car.getY();
    score = 0;
    moveDirection = 2;
    result[1] = 2501;
    result[0] = 2501;
    ADC_HandleTypeDef hadc1;
    HAL_ADC_Start_DMA(&hadc1, result, 2);
    RaceScreenViewBase::setupScreen();


}

void RaceScreenView::tearDownScreen()
{
    RaceScreenViewBase::tearDownScreen();
}

// moveDirection 1 - up, 2 - up and right, 3 - right, 4 - right and down and continue...
void RaceScreenView::handleTickEvent() {
	HAL_ADC_PollForConversion(&hadc1, 500);
	car.cancelMoveAnimation();
	score++;
	Unicode::snprintf(scoreCounterBuffer, SCORECOUNTER_SIZE, "%d", result[0]);
	scoreCounter.invalidate();

	 if ((result[0]>=2000) && (result[0]<=3000))
	 {
	  HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, GPIO_PIN_RESET);
	 }

	 if ((result[1]>=2000) && (result[1]<=3000))
	 {
		 HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, GPIO_PIN_RESET);
	 }

	 if ((result[0]>=8000))
	 {
		  HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, GPIO_PIN_SET);
		  carX--;
	 }

	 if ((result[0]<=800))
	 {
		  HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, GPIO_PIN_SET);
		  carX++;
	 }

	 if ((result[1]>=8000))
	 {
		  HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, GPIO_PIN_SET);
		  carY++;
	 }

	 if ((result[1]<=800))
	 {
		  HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, GPIO_PIN_SET);
		  carY--;
	 }



//
//	if (carX == 0) {
//		if (moveDirection ==  8) moveDirection = 2;
//		else if (moveDirection == 6) moveDirection = 4;
//	}
//	if (carX == 203) {
//		if (moveDirection == 2) moveDirection = 8;
//		else if (moveDirection == 4) moveDirection = 6;
//	}
//	if (carY == 26) {
//		if(moveDirection == 2) moveDirection = 4;
//		else if (moveDirection == 8) moveDirection = 6;
//	}
//	if (carY == 240) {
//		if (moveDirection == 4) moveDirection = 2;
//		else if (moveDirection == 6) moveDirection = 8;
//	}
//
//	switch(moveDirection) {
//	case 1:
//		carY--;
//		break;
//	case 2:
//		carX++;
//		carY--;
//		break;
//	case 3:
//		carX++;
//		break;
//	case 4:
//		carX++;
//		carY++;
//		break;
//	case 5:
//		carY++;
//		break;
//	case 6:
//		carX--;
//		carY++;
//		break;
//	case 7:
//		carX--;
//		break;
//	case 8:
//		carX--;
//		carY--;
//		break;
//	default:
//		break;
//	}

	car.startMoveAnimation(carX, carY, 20);
}
